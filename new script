--[[

 .____                  ________ ___.    _____                           __                

 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 

 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \

 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/

 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   

         \/          \/         \/    \/                \/     \/     \/                   

          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (2==v0) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==5) then v16=nil;v16=function(v22,v23,...)local v27=1;local v28;v22=v5(v4(v22,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v83=0;local v84;while true do if (v83==0) then v84=v3(v1(v29,16));if v28 then local v111=v6(v84,v28);v28=nil;return v111;else return v84;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v85=0 + 0 ;local v86;while true do if (v85==((5278 -3483) -(204 + 1591))) then v86=(v31/(2^(v32-(1 -(0 -0)))))%((6 -4)^(((v33-(825 -(595 + 229))) -(v32-1)) + (2 -1))) ;return v86-(v86%1) ;end end else local v87=1784 -((1219 -(380 + 138)) + 1083) ;local v88;while true do if (((1677 -(181 + 152)) -(611 + 733))==v87) then v88=(1 + 1)^(v32-(131 -(34 + 96))) ;return (((v31%(v88 + v88))>=v88) and ((1537 -(252 + 777)) -(47 + 460))) or (0 -0) ;end end end end local function v34()local v47=1180 -(549 + 631) ;local v48;while true do if (v47==(2 -1)) then return v48;end if (v47==(0 + 0)) then v48=v2(v22,v27,v27);v27=v27 + (1335 -(1119 + 215)) ;v47=1 + 0 ;end end end local function v35()local v49=0 + 0 ;local v50;local v51;while true do if (v49==1) then return (v51 * ((1960 -(198 + 1681)) + 175)) + v50 ;end if (v49==((0 + 0) -0)) then v50,v51=v2(v22,v27,v27 + 2 + 0 );v27=v27 + (1981 -(1386 + 593)) ;v49=3 -(1 + 1) ;end end end local function v36()local v52,v53,v54,v55=v2(v22,v27,v27 + 2 + 1 );v27=v27 + (991 -(574 + 413)) ;return (v55 * 16777216) + (v54 * (23833 + 41703)) + (v53 * (751 -(354 + 141))) + v52 ;end local function v37()local v56=v36();local v57=v36();local v58=1 + 0 + 0 ;local v59=(v30(v57,(1 -0) + 0 ,43 -23 ) * ((2 + 0)^(615 -(84 + 499)))) + v56 ;local v60=v30(v57,12 + 9 ,134 -103 );local v61=((v30(v57,23 + 9 )==(507 -(405 + 101))) and  -1) or (3 -2) ;if (v60==(0 + 0)) then if (v59==(0 + 0)) then return v61 * (0 -0) ;else v60=1090 -(35 + 1054) ;v58=0 -0 ;end elseif (v60==(788 + 1259)) then return ((v59==(0 -0)) and (v61 * ((1 + 0)/(494 -(335 + 159))))) or (v61 * NaN) ;end return v9(v61,v60-(621 + 402) ) * (v58 + (v59/(2^(94 -(134 -92))))) ;end local function v38(v39)local v62;if  not v39 then v39=v36();if (v39==(0 + 0)) then return "";end end v62=v4(v22,v27,(v27 + v39) -(1 + 0) );v27=v27 + v39 ;local v63={};for v75=649 -(424 + 224) , #v62 do v63[v75]=v3(v2(v4(v62,v75,v75)));end return v7(v63);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v64=0 -0 ;local v65;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v64==(2 + 0)) then local v89=0 -0 ;while true do if (v89~=(0 + 0)) then else v69=nil;v70=nil;v89=1;end if (v89~=(1 + 0)) then else v64=3;break;end end end if (v64~=(2 + 1)) then else v71=nil;while true do local v93=0;local v94;while true do if (v93==0) then v94=0 -0 ;while true do if (v94~=0) then else if ((1615 -(1418 + 195))==v65) then local v116=495 -(433 + 62) ;local v117;while true do if (v116==0) then v117=0 -0 ;while true do local v124=0 -0 ;while true do if (v124==0) then if (v117==(1 + 0)) then local v129=900 -(211 + 689) ;while true do if (v129~=0) then else local v144=0;while true do if (0==v144) then for v224=2 -1 ,v36() do v68[v224]=v36();end return v69;end end end end end if (v117==(0 -0)) then for v133=1,v36() do local v134=0 -0 ;local v135;while true do if (v134==(0 -0)) then v135=v34();if (v30(v135,1877 -(63 + 1813) ,1)~=0) then else local v214=0;local v215;local v216;local v217;local v218;while true do if (v214==(18 -(12 + 6))) then local v238=0;local v239;while true do if (v238==(0 -0)) then v239=0 + 0 ;while true do if (v239==(1287 -(886 + 401))) then v215=0;v216=nil;v239=1722 -(131 + 1590) ;end if (v239~=1) then else v214=1 + 0 ;break;end end break;end end end if (v214==1) then local v240=0;while true do if (1==v240) then v214=5 -3 ;break;end if (v240==0) then v217=nil;v218=nil;v240=2 -1 ;end end end if (v214==(1939 -(1635 + 302))) then while true do if (v215==3) then if (v30(v217,3,10 -7 )~=(1624 -(1603 + 20))) then else v218[4]=v71[v218[1184 -(114 + 1066) ]];end v66[v133]=v218;break;end if (1==v215) then local v277=0 + 0 ;local v278;local v279;while true do if (v277==(140 -(16 + 124))) then v278=0;v279=nil;v277=1;end if (v277~=(1 + 0)) then else while true do if (v278==0) then v279=863 -(812 + 51) ;while true do if (v279~=0) then else local v318=0 + 0 ;while true do if (v318==(0 -0)) then v218={v35(),v35(),nil,nil};if (v216==0) then local v335=0;while true do if (v335~=(1304 -(77 + 1227))) then else v218[1 + 2 ]=v35();v218[4]=v35();break;end end elseif (v216==(1 + 0)) then v218[3]=v36();elseif (v216==(645 -(116 + 527))) then v218[3]=v36() -(2^(63 -47)) ;elseif (v216~=(2 + 1)) then else local v349=0 -0 ;local v350;local v351;while true do if ((1293 -(1064 + 229))==v349) then local v355=0 -0 ;while true do if (v355==0) then v350=1339 -(1197 + 142) ;v351=nil;v355=1;end if (v355==1) then v349=2 -1 ;break;end end end if (v349==1) then while true do if (v350~=(0 + 0)) then else v351=0 + 0 ;while true do if (0~=v351) then else v218[3]=v36() -(2^16) ;v218[3 + 1 ]=v35();break;end end break;end end break;end end end v318=1;end if (v318==1) then v279=3 -2 ;break;end end end if (v279==(1 -0)) then v215=2;break;end end break;end end break;end end end if (v215==2) then local v280=0;local v281;while true do if (v280~=(29 -(20 + 9))) then else v281=1303 -(517 + 786) ;while true do if (v281~=1) then else v215=1534 -(35 + 1496) ;break;end if (v281~=(0 + 0)) then else if (v30(v217,1 + 0 ,1)~=1) then else v218[1 + 1 ]=v71[v218[2 -0 ]];end if (v30(v217,7 -5 ,2)==(4 -3)) then v218[195 -(164 + 28) ]=v71[v218[1 + 2 ]];end v281=1588 -(1199 + 388) ;end end break;end end end if (v215==0) then local v282=0;while true do if (v282==(0 + 0)) then v216=v30(v135,2,3);v217=v30(v135,4 + 0 ,376 -(166 + 204) );v282=978 -(729 + 248) ;end if (v282~=(2 -1)) then else v215=1;break;end end end end break;end end end break;end end end for v136=401 -(331 + 69) ,v36() do v67[v136-1 ]=v42();end v117=1 + 0 ;end break;end end end break;end end end if (v65==0) then local v118=0;local v119;while true do if (v118~=0) then else v119=0;while true do if (v119==0) then local v125=0;local v126;while true do if (v125==(100 -(69 + 31))) then v126=0 -0 ;while true do if (v126==0) then v66={};v67={};v126=1 + 0 ;end if (v126==(1 + 0)) then v119=1;break;end end break;end end end if (v119==(1 + 0)) then local v127=0 + 0 ;while true do if (v127==(714 -(21 + 693))) then v68={};v69={v66,v67,nil,v68};v127=1435 -(787 + 647) ;end if (v127==1) then v119=1 + 1 ;break;end end end if (v119==2) then v65=1;break;end end break;end end end v94=1 + 0 ;end if (v94==1) then if (v65==(1 + 0)) then local v120=0;local v121;local v122;while true do if (0~=v120) then else v121=0 + 0 ;v122=nil;v120=1;end if ((1 + 0)==v120) then while true do if (v121==(0 + 0)) then v122=0 -0 ;while true do if (v122==2) then v65=1213 -(991 + 220) ;break;end if (v122==0) then v70=v36();v71={};v122=1 -0 ;end if (v122~=1) then else for v138=1,v70 do local v139=480 -(38 + 442) ;local v140;local v141;local v142;while true do if ((0 -0)==v139) then local v145=0;while true do if (v145==(860 -(186 + 673))) then v139=2 -1 ;break;end if (v145~=0) then else v140=0 -0 ;v141=nil;v145=1 -0 ;end end end if (v139==(1 -0)) then v142=nil;while true do if (v140~=(0 + 0)) then else local v226=0 + 0 ;local v227;while true do if (v226==(217 -(9 + 208))) then v227=0 -0 ;while true do if (v227==0) then v141=v34();v142=nil;v227=1 + 0 ;end if (v227==(3 -2)) then v140=1;break;end end break;end end end if (v140==(1280 -(1133 + 146))) then if (v141==1) then v142=v34()~=0 ;elseif (v141==(3 -1)) then v142=v37();elseif (v141~=(736 -(400 + 333))) then else v142=v38();end v71[v138]=v142;break;end end break;end end end v69[3]=v34();v122=2;end end break;end end break;end end end break;end end break;end end end break;end if (v64~=0) then else local v90=0;while true do if (v90~=0) then else local v105=0 -0 ;while true do if (v105~=1) then else v90=1;break;end if (v105==(1886 -(480 + 1406))) then v65=0;v66=nil;v105=1014 -(659 + 354) ;end end end if (v90~=1) then else v64=1 + 0 ;break;end end end if (v64==(1208 -(1123 + 84))) then local v91=0 -0 ;local v92;while true do if (v91~=(0 + 0)) then else v92=0;while true do if (v92==(0 -0)) then v67=nil;v68=nil;v92=1;end if (v92==1) then v64=2;break;end end break;end end end end end local function v43(v44,v45,v46)local v72=v44[1];local v73=v44[2];local v74=v44[3];return function(...)local v77=0;local v78;local v79;local v80;local v81;local v82;while true do if (v77==0) then v78=1;v79= -1;v77=1;end if (v77==3) then A,B=v41(v12(v82));if  not A[1] then local v106=v44[4][v78] or "?" ;error("Script error at ["   .. v106   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v77==1) then v80={...};v81=v13("#",...) -1 ;v77=2;end if (v77==2) then v82=nil;v82=function()local v95=v72;local v96=v73;local v97=v74;local v98=v41;local v99={};local v100={};local v101={};for v107=0 -0 ,v81 do if ((v107>=v97) or ((852 + 3739)<((1926 -1429) + 582))) then v99[v107-v97 ]=v80[v107 + (2 -1) ];else v101[v107]=v80[v107 + (2 -1) ];end end local v102=(v81-v97) + (1 -0) ;local v103;local v104;while true do local v108=457 -(263 + 194) ;local v109;local v110;while true do if ((((9870 + 572) -(33620 -26682))==3504) and (v108==(1 + 0 + 0))) then while true do if ((3784>=1801) and (((0 -0) + 0)==v109)) then v110=0 + 0 ;while true do if (((3269 -(643 + 617))<=(2109 -(5 + 8))) and (0==v110)) then local v123=312 -(243 + 69) ;while true do if ((v123==((699 -288) -(26 + 384))) or ((2299 -(268 + 249))<(5 + 54))) then v110=1;break;end if (((0 + 0)==v123) or ((3165 -1799)>=4525)) then local v128=0;while true do if (((4039 -((2437 -1602) + 55))<=(5366 -1423)) and (v128==(1558 -(1550 + 8)))) then v103=v95[v78];v104=v103[(2 + 2) -3 ];v128=(563 + 123) -(456 + 229) ;end if (((1543 + 1794)>(247 -(221 + 19))) and (v128==(483 -((495 -232) + 219)))) then v123=1 + 0 ;break;end end end end end if (((1 + 0)==v110) or ((15043 -10876)<(320 + 3281))) then if ((v104<=(35 -21)) or ((3532 -(2594 -(176 + 190)))==(1456 + (8298 -5952)))) then if ((v104<=(1762 -(623 + 1133))) or ((771 + 2696 + 1265)>=(6308 -(659 + 803)))) then if ((3671==(3958 -(266 + 21))) and (v104<=(1 + 1))) then if ((v104<=(0 -0)) or (1111>=(10601 -5627))) then v101[v103[1 + 1 ]]=v43(v96[v103[3]],nil,v46);elseif ((v104==(2 -1)) or ((313 + (1255 -(678 + 321)))>=(13322 -9459))) then local v146=0 -0 ;local v147;while true do if ((v146==(681 -(174 + 507))) or (3304==(2734 -(3300 -1954)))) then v147=v103[(7 -5) -0 ];v101[v147]=v101[v147](v14(v101,v147 + ((2794 -(1541 + 363)) -(172 + 717)) ,v79));break;end end else do return;end end elseif ((v104<=(1298 -(212 + 1027 + 55))) or ((1333 + 465)>3663)) then if ((v104==(9 -6)) or ((8356 -5029)<=(1772 + 1203))) then local v148=0 + 0 ;local v149;local v150;local v151;local v152;local v153;while true do if ((v148==(2 + 0)) or ((355 + 436)<=(736 -(93 + 148)))) then v153=nil;while true do if (((1 + 0)==v149) or ((1400 -864)>(2584 + 547))) then v152=nil;v153=nil;v149=2;end if (((2582 -(22 + 322))==(1635 + 603)) and ((2 + 0)==v149)) then while true do if ((3406>=((1767 -(247 + 353)) + 29)) and ((1 + 0)==v150)) then local v285=0 -0 ;local v286;while true do if ((((4956 -(412 + 1452)) + 225)>=(2144 -(124 + 246))) and ((0 + 0)==v285)) then v286=465 -(373 + 92) ;while true do if ((v286==((2747 -1374) -(1277 + 95))) or (((7627 + 1552) -6188)==(4564 -(7 + 463 + 282)))) then v150=1858 -(1182 + 674) ;break;end if (((21 + 835)<(1532 + 99)) and (0==v286)) then local v306=0;while true do if ((681<(4317 -(353 + 451))) and (v306==((2 + 0) -1))) then v286=1669 -(680 + 988) ;break;end if ((((1745 + 813) -(5 + 1607))<=(2587 + 1636)) and (v306==0)) then v153={};v152=v11({},{__index=function(v325,v326)local v330=0 -0 ;local v331;while true do if ((v330==(0 + 0)) or ((5119 -3203)<1302)) then v331=v153[v326];return v331[1179 -(1042 + 136) ][v331[1918 -(368 + 1548) ]];end end end,__newindex=function(v325,v326,v327)local v332=0 + (363 -(335 + 28)) ;local v333;local v334;while true do if (((3 -2)==v332) or ((144 + 137 + 84)>=727)) then while true do if ((v333==(0 -0)) or (4934==(8783 -5452))) then v334=v153[v326];v334[134 -(78 + 55) ][v334[3 -1 ]]=v327;break;end end break;end if (((0 -0)==v332) or ((10705 -8513)<(1163 -((2063 -(418 + 1322)) + 301)))) then local v337=0 + (1245 -(1222 + 23)) ;while true do if (((760 -(261 + 498))==v337) or ((10444 -6668)==(5227 -(298 + 343)))) then v332=1;break;end if ((4630>=(3091 -(383 + 1157))) and (v337==0)) then v333=0 + 0 ;v334=nil;v337=1801 -(494 + 1306) ;end end end end end});v306=4 -3 ;end end end end break;end end end if (((3282 + (1764 -(237 + 752)))>(592 + 431)) and ((1554 -(1112 + 442))==v150)) then local v287=0 + 0 ;local v288;while true do if ((v287==0) or ((3332 -(1188 + 800))>=(6570 -3564))) then v288=0 -0 ;while true do if ((v288==0) or (2929<=(1102 + 1304))) then v151=v96[v103[2 + 1 ]];v152=nil;v288=1;end if ((v288==(2 -1)) or ((8285 -5132)>=(7987 -(5649 -(1562 + 59))))) then v150=1;break;end end break;end end end if ((v150==(1295 -(527 + (2758 -(389 + 1603))))) or ((808 + 1282)>=4362)) then for v295=1,v103[9 -5 ] do local v296=0 + 0 ;local v297;local v298;while true do if ((v296==(0 -0)) or (957>(1045 + 584))) then v297=(461 + 235) -(596 + 100) ;v298=nil;v296=23 -(6 + 16) ;end if ((v296==(1 + 0)) or ((1883 -676)<(642 -284))) then while true do if (((13426 -9070)==(896 + 3460)) and (v297==(1 + 0))) then if ((v298[1]==(33 -22)) or ((4128 -1694)>=4025)) then v153[v295-(3 -2) ]={v101,v298[2 + 1 + 0 ]};else v153[v295-(1 + 0) ]={v45,v298[3]};end v100[ #v100 + (3 -2) ]=v153;break;end if ((v297==(0 + 0)) or ((6844 -2670)<(10449 -6663))) then local v313=0;local v314;while true do if (((2190 -615)>=687) and (v313==((2549 -(130 + 1089)) -(765 + 565)))) then v314=0 -0 ;while true do if (((2745 -(587 + 1371))<=(11 + 1498)) and (v314==(1 + 0))) then v297=140 -(21 + 118) ;break;end if (((224 + 140)<(16425 -12912)) and ((1750 -(262 + 136 + 1352))==v314)) then v78=v78 + (2 -1) ;v298=v95[v78];v314=1;end end break;end end end end break;end end end v101[v103[2]]=v43(v151,v152,v46);break;end end break;end if ((475<=(312 + 2827 + 1632)) and (v149==(0 + 0))) then v150=1732 -(1021 + 711) ;v151=nil;v149=1 + 0 + 0 ;end end break;end if (((4 -3)==v148) or ((3429 -(218 + 231))<(958 + 73 + 82))) then v151=nil;v152=nil;v148=2 + (0 -0) ;end if ((v148==0) or ((5383 -(69 + 1049))==(3502 -2395))) then v149=(1606 -(572 + 95)) -(747 + 192) ;v150=nil;v148=1 + 0 ;end end elseif (((2463 + 1660)==((15785 -(91 + 519)) -(2352 + 8700))) and (v101[v103[2 + 0 ]]==v101[v103[(1556 -(146 + 186)) -(925 + 295) ]])) then v78=v78 + (1044 -(426 + 617)) ;else v78=v103[7 -(7 -3) ];end elseif ((v104>(4 + 1)) or ((2604 -(221 + 848))<=1270)) then local v154=208 -(103 + 105) ;local v155;local v156;local v157;while true do if (((56 + 3013)>=(155 -105)) and (v154==(0 + 0))) then v155=0 + 0 ;v156=nil;v154=1268 -(1123 + 144) ;end if (((8507 -(14613 -7918))>1112) and (v154==(4 -3))) then v157=nil;while true do if ((((1196 -(23 + 966)) -(166 + 40))==v155) or (4414==4991)) then while true do if (((731 + 538)>137) and (v156==(0 + 0))) then v157=v103[4 -2 ];v101[v157]=v101[v157](v14(v101,v157 + 1 ,v103[5 -2 ]));break;end end break;end if (((1366 + 1026)<(12163 -9106)) and (v155==(0 -0))) then local v241=(0 + 0) -0 ;while true do if (((4000 -(996 + 255))<=(5538 -(523 + 1115))) and (v241==1)) then v155=219 -(20 + 198) ;break;end if ((1236<=(164 + 1667)) and (v241==(0 + 0))) then v156=0;v157=nil;v241=1;end end end end break;end end else local v158=0 + 0 ;local v159;while true do if ((v158==0) or ((2881 + 2080)<=1997)) then v159=v103[35 -(5 + 28) ];v101[v159]=v101[v159](v101[v159 + (861 -(489 + 371)) ]);break;end end end elseif (((291 -189)<=(5504 -(839 + 1051))) and (v104<=((43 -22) -11))) then if ((v104<=(22 -14)) or (3797>=(5707 -(813 + 688)))) then if (((2975 -(728 + 1035))<=(3745 -1230)) and (v104>(752 -(5 + 740)))) then v101[v103[5 -3 ]][v103[56 -(50 + 3) ]]=v101[v103[(817 -(751 + 58)) -4 ]];else v101[v103[3 -(1001 -(320 + 680)) ]]();end elseif ((((4518 + 2226) -4392)<(2528 + 1651)) and (v104==(13 -4))) then if (((5297 -(700 + 256))>=3808) and (v101[v103[7 -5 ]]~=v101[v103[8 -4 ]])) then v78=v78 + (592 -(280 + 311)) ;else v78=v103[2 + 0 + 1 ];end elseif ((v101[v103[(1067 -(178 + 678)) -(161 + 48) ]]==v103[8 -4 ]) or ((6034 -3355)>=((8962 -4381) -(228 + 312)))) then v78=v78 + (3 -2) ;else v78=v103[1999 -(1259 + 737) ];end elseif ((v104<=12) or ((4997 -(204 + 824))<(6434 -2504))) then if (((8029 -4187)>=(1030 + 350)) and (v104>(10 + 1))) then if ((2169<=((16089 -(33 + 1073)) -10453)) and (v103[643 -(65 + 16 + 247 + 313) ]==v101[v103[(968 -692) -((330 -181) + 123) ]])) then v78=v78 + 1 + 0 + (0 -0) ;else v78=v103[2 + 1 ];end else v101[v103[1519 -(1094 + (1182 -759)) ]]=v101[v103[1371 -(731 + 637) ]];end elseif ((v104==13) or (((600 + 341) -670)==((7704 -3830) -(123 + 104)))) then local v164=921 -(766 + 155) ;local v165;local v166;while true do if (((975 -(70 + 494))<1844) and (v164==(2 -1))) then while true do if (((5794 -((2625 -(1488 + 429)) + 1163))>=(2109 + 461)) and (v165==(1487 -(406 + 1081)))) then v166=v103[1 + 1 ];v101[v166](v14(v101,v166 + (42 -(5 + 36)) ,v103[9 -6 ]));break;end end break;end if (((5266 -(173 + 370))>(7202 -2673)) and ((634 -(135 + 499))==v164)) then local v233=0 -0 ;while true do if ((4448>=(5215 -3018)) and ((951 -(402 + 548))==v233)) then v164=1 + 0 ;break;end if ((4874>(6942 -4034)) and (v233==0)) then v165=0 -0 ;v166=nil;v233=1 -0 ;end end end end else local v167=375 -(141 + 234) ;local v168;local v169;local v170;local v171;local v172;local v173;while true do if ((v167==(1680 -(1398 + 282))) or ((607 + 145)<((39 -11) + (1199 -(836 + 355))))) then v168=175 -(137 + 38) ;v169=nil;v167=1;end if ((v167==(6 -3)) or ((60 + 302)>(916 + 1954))) then while true do if ((v168==3) or ((9048 -6813)==(5379 -(288 + (2525 -(557 + 1195)))))) then if (((3831 -((1704 -(188 + 1145)) + 312))>138) and v173) then local v283=0;local v284;while true do if (((7786 -5251)<3769) and (v283==(272 -(6 + (1797 -(1402 + 129)))))) then v284=1850 -(1212 + 638) ;while true do if (((1608 + 2865)>=((12335 -7564) -1667)) and (v284==(0 -0))) then v101[v171]=v173;v78=v103[3 + 0 + 0 ];break;end end break;end end else v78=v78 + (3 -2) ;end break;end if ((v168==(277 -((1628 -(875 + 565)) + 89))) or (((6215 -4312) + 1536)>((5323 -(261 + 94)) -(149 + 826)))) then v169=v103[2];v170=v103[4];v168=2 -1 ;end if (((1 + 0)==v168) or ((1806 -(479 + 614))>=(3039 + 1716))) then v171=v169 + ((2349 -(555 + 828)) -(750 + 214)) ;v172={v101[v169](v101[v169 + (4 -3) ],v101[v171])};v168=1 + 1 ;end if (((6067 -(39 + 1083))>(1300 + 783)) and (v168==2)) then for v261=1 -0 ,v170 do v101[v171 + v261 ]=v172[v261];end v173=v172[1 -0 ];v168=(227 -(65 + 56)) -(47 + 56) ;end end break;end if ((v167==2) or ((1871 -(7 + 41))<=210)) then v172=nil;v173=nil;v167=3;end if (((4952 -(709 + 1092))>(5555 -3783)) and (v167==(1 -0))) then v170=nil;v171=nil;v167=2;end end end elseif ((v104<=(2 + 20)) or (((3269 + 753) -1897)>=(2046 + 1397))) then if ((v104<=(1850 -(1680 + 152))) or ((240 + 127 + 743)>1741)) then if (((6723 -2343)>=((1808 -676) + 18)) and (v104<=16)) then if ((v104==(52 -37)) or (2412>=(12190 -8109))) then v101[v103[4 -(2 + 0) ]]=v45[v103[3]];else v101[v103[1327 -(973 + 352) ]][v103[756 -(378 + 375) ]]=v103[4];end elseif ((v104==17) or ((830 -(67 + 623))>=(4686 -1307))) then local v178=0;local v179;local v180;while true do if ((v178==(0 + 0 + 0)) or ((2515 -1854)<(302 + 346))) then v179=1581 -(1039 + 542) ;v180=nil;v178=(1476 -(1404 + 71)) + 0 ;end if ((v178==(329 -(50 + 278))) or ((2746 -((731 -468) + 1439))>(1252 + (12340 -8746)))) then while true do if ((v179==((0 -0) -0)) or ((6616 -(292 + 1407))<=(227 + 143))) then v180=v103[1 + 1 ];v101[v180](v101[v180 + (2 -1) ]);break;end end break;end end else v101[v103[9 -(17 -10) ]]={};end elseif (((254 + 1039)==((1483 -940) + 750)) and (v104<=(34 -14))) then if ((476<=(10778 -6602)) and (v104==(47 -(1550 -(164 + 1358))))) then local v182=0 + 0 ;local v183;local v184;local v185;local v186;while true do if (((132 + (8744 -5197))==(1883 + 1579 + 217)) and (v182==(0 + 0))) then local v234=843 -(213 + 630) ;while true do if (((430 -277)<=(4317 -(107 + 266))) and (v234==(0 + 0))) then v183=0;v184=nil;v234=3 -2 ;end if (((203 + 3196)>(2188 -(1078 + 880))) and (v234==(344 -(305 + (219 -(45 + 136)))))) then v182=1 -0 ;break;end end end if ((v182==2) or (676>(865 + 2962))) then while true do if (((5972 -(205 + 1649))>=(2285 -(31 + 1376))) and (v183==(0 -0))) then local v247=0 -0 ;local v248;while true do if (((10755 -7926)<(503 + 2064 + 1677)) and (v247==(0 + 0))) then v248=0 + (0 -0) ;while true do if ((((198 -(27 + 171)) + 0)==v248) or ((1374 + 992)==(410 -298))) then v184=v103[8 -(3 + 3) ];v185={v101[v184](v101[v184 + 1 + 0 ])};v248=1 + 0 + (1205 -(823 + 382)) ;end if ((v248==(1 + 0)) or ((10127 -7570)<=(1492 -(683 + 2)))) then v183=(1186 -868) -(24 + 293) ;break;end end break;end end end if ((3325>=(1820 -(4 + 7))) and (v183==1)) then v186=0 -(1687 -(953 + 734)) ;for v264=v184,v103[4] do local v265=956 -(691 + 265) ;local v266;while true do if ((1103<=((4897 -1994) -(218 + 1213))) and (v265==(537 -(19 + 518)))) then v266=0 + 0 ;while true do if (((2511 -(566 + 10))>=(2692 -(343 + 610))) and (v266==(0 + 0))) then v186=v186 + (1 -0) ;v101[v264]=v185[v186];break;end end break;end end end break;end end break;end if ((v182==(169 -(119 + 49))) or ((2060 -1240)>=4646)) then local v235=0 -(0 -0) ;while true do if (((1024 -524)>(234 -64)) and (v235==0)) then v185=nil;v186=nil;v235=2 -1 ;end if (((2527 -(811 + 405))<=(6513 -(180 + 1658))) and (v235==(1 + 0))) then v182=2;break;end end end end else v101[v103[(3059 -1807) -(297 + 953) ]]=v103[8 -5 ]~=(1823 -(701 + 1122)) ;end elseif (((4454 -(1111 + 75))<=(2516 + 1250)) and (v104>(55 -34))) then local v188=0;local v189;local v190;local v191;while true do if ((v188==0) or (((14186 -8825) -(278 + 116 + (1566 -(146 + 37))))<3180)) then v189=0 + 0 ;v190=nil;v188=624 -(326 + 297) ;end if (((2802 -(8 + 50))==(9908 -7164)) and (v188==((3 -2) + 0))) then v191=nil;while true do if (((1516 -783)<=(5663 -(366 + 367))) and (v189==(1609 -(49 + 36 + 1523)))) then v101[v190 + (3 -2) ]=v191;v101[v190]=v191[v103[1832 -(1682 + 146) ]];break;end if (((205 + (2116 -392))<=(4238 -(304 + 886))) and (v189==(0 -0))) then v190=v103[1086 -(353 + 731) ];v191=v101[v103[3 + 0 ]];v189=1 -0 ;end end break;end end elseif (((4981 -(845 + 837))<(5644 -(901 + 57 + 65))) and v101[v103[2 + 0 ]]) then v78=v78 + 1 + 0 ;else v78=v103[1448 -(850 + 595) ];end elseif ((v104<=(15 + 11)) or ((50 -28)>(13431 -(16217 -7156)))) then if ((v104<=24) or ((2477 + 1991)<=1447)) then if ((116==(60 + 56)) and (v104>(4 + 19))) then v101[v103[610 -(24 + 57 + 527) ]]=v103[3 + (0 -0) ];else local v194=(4285 -3287) -(232 + 766) ;local v195;local v196;while true do if (((134 + 1667)>=(2818 -(1069 + 882))) and (v194==(0 + 0))) then v195=0;v196=nil;v194=1;end if (((1314 + (919 -(686 + 33)))==(85 + 26 + 1403)) and (v194==1)) then while true do if ((4203>2011) and (v195==0)) then v196=v103[1 + 1 ];v101[v196]=v101[v196]();break;end end break;end end end elseif (((4123 + 210)>=530) and (v104>25)) then v101[v103[9 -7 ]]=v46[v103[3]];else local v199=0;local v200;local v201;local v202;while true do if (((4204 -2533)<=(593 + 4022)) and (v199==(0 -0))) then local v236=0 + 0 ;while true do if (((83 + 282)<(471 + 2333)) and (v236==(1 + 0))) then v199=1 + 0 ;break;end if (((2174 -(822 + 69))>=(227 + 634)) and (0==v236)) then v200=0;v201=nil;v236=3 -2 ;end end end if ((v199==1) or ((893 + 523)>=4475)) then v202=nil;while true do if ((v200==(1 + 0)) or ((6149 -(1393 + 107))==(214 + 797))) then for v267=1238 -(480 + 757) , #v100 do local v268=0 -0 ;local v269;local v270;local v271;while true do if ((3879>2147) and (v268==(1979 -(839 + 1139)))) then v271=nil;while true do if (((3016 -(79 + 115))<=(1099 + 1840 + 526)) and ((1090 -(445 + 32 + 613))==v269)) then v270=849 -(307 + (2534 -(1989 + 3))) ;v271=nil;v269=89 -(47 + 41) ;end if (((6229 -(170 + 1489))>=(7815 -3421)) and (v269==1)) then while true do if (((4956 -(186 + 302))==(1650 + (4225 -(542 + 865)))) and (v270==(0 + 0))) then v271=v100[v267];for v319=0 + 0 , #v271 do local v320=(634 + 160) -(241 + 553) ;local v321;local v322;local v323;local v324;while true do if (((444 -(77 + 366))==v320) or ((605 -289)==(21 + 50 + (2216 -(536 + 494))))) then v323=nil;v324=nil;v320=3 -1 ;end if ((v320==((1335 + 496) -(1545 + 284))) or ((3182 -(368 + 731))>(662 + 2266))) then while true do if ((v321==(1 + 0)) or (2782>=((19790 -14411) -((1478 -(292 + 469)) + 12)))) then v324=v322[2];if (((776 + 121)<=((211 -155) + (2476 -(243 + 254)))) and (v323==v101) and (v324>=v201)) then local v347=0 -0 ;while true do if (((0 + 0)==v347) or ((2360 + 111 + 389)>=(5162 -(418 + 1193)))) then v202[v324]=v323[v324];v322[2 -1 ]=v202;break;end end end break;end if (((3407 -(766 + 376))<(5643 -(268 + 1421))) and (v321==0)) then v322=v271[v319];v323=v322[1];v321=1510 -(917 + 592) ;end end break;end if ((v320==0) or (2847==((1184 + 654) -(515 + 1041)))) then v321=0 + 0 + 0 ;v322=nil;v320=1 + 0 ;end end end break;end end break;end end break;end if ((v268==(0 + 0)) or (2590==((139 + 297) -(18 + 30)))) then v269=1375 -(1007 + 368) ;v270=nil;v268=1 + 0 ;end end end break;end if (((0 -0)==v200) or ((3422 -(344 + 132))<=((6208 -3856) -(542 + 550)))) then local v256=1670 -(921 + 749) ;while true do if (((460 + (415 -325))<3544) and (v256==((2346 -1163) -(716 + 467)))) then v201=v103[515 -(163 + 350) ];v202={};v256=3 -2 ;end if ((v256==1) or ((1 + 8)>(4909 -2743))) then v200=2 -1 ;break;end end end end break;end end end elseif ((((86 + 2245) -1349)>=(1845 -918)) and (v104<=(6 + (65 -43)))) then if ((v104>(14 + 13)) or ((5683 -(983 + 377))>=4923)) then local v203=0 + 0 ;local v204;local v205;local v206;local v207;local v208;while true do if ((1975<=4810) and (v203==(4 -3))) then local v237=0 + 0 ;while true do if (((758 -166)<=((5391 -3593) + 716)) and (v237==(0 + 0))) then v206=nil;v207=nil;v237=1 + 0 ;end if (((461 -(181 + (985 -706)))==v237) or ((785 -(332 + 15))>=(4628 -(325 + 298)))) then v203=2 + 0 ;break;end end end if ((v203==0) or (2520<=1241)) then v204=0 -0 ;v205=nil;v203=1692 -(1480 + 211) ;end if (((2266 -792)<=2430) and (v203==(1 + 1))) then v208=nil;while true do if ((((44 + 474) -((1232 -(633 + 593)) + 512))==v204) or ((1112 -(1751 -942))>=493)) then local v257=453 -(69 + 384) ;local v258;while true do if (((351 + 2145)<(1206 + 3358)) and (v257==0)) then v258=0 + 0 ;while true do if (((4669 -3489)<=(3602 -1408)) and (v258==(0 -0))) then v205=v103[2];v206,v207=v98(v101[v205](v14(v101,v205 + 1 + 0 ,v103[11 -8 ])));v258=4 -3 ;end if (((3877 -(18 + 127))>=(3116 -1560)) and (v258==1)) then v204=1;break;end end break;end end end if (((6 -4)==v204) or ((8849 -6460)<((8333 -5241) -1769))) then for v272=v205,v79 do local v273=0 + 0 ;local v274;local v275;while true do if ((v273==(0 -0)) or (4659<4023)) then v274=0;v275=nil;v273=1 + 0 ;end if ((4476>=(9889 -6165)) and (v273==(2 -1))) then while true do if ((v274==(1695 -(206 + 1489))) or ((7840 -5849)>(4487 -(139 + 75)))) then v275=0;while true do if (((3656 -(290 + 808))<=(2125 + 1484)) and (v275==(0 + 0))) then v208=v208 + (231 -(224 + 6)) ;v101[v272]=v206[v208];break;end end break;end end break;end end end break;end if (((3183 -(80 + 236))>=(3462 -2232)) and (v204==(495 -(351 + 143)))) then local v259=0 + 0 ;local v260;while true do if ((v259==0) or ((807 -(16 + 115))>3688)) then v260=0 -0 ;while true do if ((v260==(1 + 0)) or ((1908 -(783 + (1518 -681)))>=4274)) then v204=1 + 1 ;break;end if (((1753 -(330 + 602))<((4223 -2072) -(44 + 217))) and (v260==(109 -(11 + 98)))) then local v301=1158 -((667 -(138 + 458)) + 1087) ;while true do if (((3543 -(1193 + (15 -7)))==((1060 -610) + 1892)) and (v301==(1 -0))) then v260=(566 -(50 + 515)) + 0 ;break;end if ((v301==(1964 -(1120 + 844))) or ((550 + 996)>=(1285 + 938))) then v79=(v207 + v205) -(2 -1) ;v208=0 + 0 ;v301=1421 -(495 + 925) ;end end end end break;end end end end break;end end else v78=v103[34 -(5 + 26) ];end elseif (((6188 -1905)==(424 + 3859)) and (v104>(42 -(5 + 8)))) then for v212=v103[499 -(412 + 85) ],v103[1 + 2 ] do v101[v212]=nil;end else v101[v103[1 + 1 ]]=v101[v103[806 -(263 + 540) ]][v103[13 -9 ]];end v78=v78 + 1 ;break;end end break;end end break;end if (((468 + 2477)<=(19891 -15447)) and (v108==(412 -(14 + 173 + 225)))) then v109=(1784 -(939 + 845)) + (0 -0) ;v110=nil;v108=2 -1 ;end end end end;v77=3;end end end;end return v43(v42(),{},v23)(...);end;vv10(),...);break;end if (4==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
